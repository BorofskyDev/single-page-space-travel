@import url('https://fonts.googleapis.com/css2?family=Barlow+Condensed:wght@400;700&family=Barlow:wght@400;700&family=Bellefair&display=swap');

/********************/
/* Custom Properties*/
/********************/

@font-face {
  font-family: 'Exan-Regular';
  src: url(../static/fonts/Exan-Regular.ttf);
}
@font-face {
  font-family: 'Syncopate-Bold';
  src: url(../static/fonts/Syncopate-Bold.ttf);
}
@font-face {
  font-family: 'Gruppo-Regular';
  src: url(../static/fonts/Gruppo-Regular.ttf);
}

:root {
  /* Colors */
  --primary: #a8dadc;
  --secondary: #e63946;
  --accent: #457b9d;

  --light: #f1faee;
  --dark: #1d3557;

  --gray: #4a5657;
  --black: #060808;

  /* Font-sizes */
  /* try to use rem on font size due to access. PX can override large print devices */
  --fs-900: clamp(5rem, 40vw - 9rem, 9rem);
  --fs-800: clamp(4.5rem, 10vw + 1rem, 5.5rem);
  --fs-700: clamp(3.5rem, 13vw - 1rem, 4.8rem);
  --fs-600: clamp(2rem, 9vw - 1.1rem, 2.9rem);
  --fs-500: clamp(1.75rem, 8.5vw - 1.2rem, 2.6rem);
  --fs-400: clamp(1.125rem, 6.8vw - 1.2rem, 1.8rem);
  --fs-300: clamp(1rem, 6vw - 1.1rem, 1.6rem);
  --fs-200: clamp(0.857rem, 5.4vw - 1rem, 1.4rem);

  /* Font-Families */
  --ff-title: 'Exan-Regular', sans-serif;
  --ff-header: 'Syncopate-Bold', sans-serif;
  --ff-main: 'Gruppo-Regular', sans-serif;
}

/********************/
/*     CSS Reset    */
/********************/

/* Box Sizing */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reset Margin */

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
picture {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  font-weight: 400;
}

/* Set Up Body */
body {
  font-family: var(--ff-main);
  font-size: var(--fs-400);
  color: var(--light);
  background-color: var(--black);
  line-height: 1.5;
  min-height: 100vh;
  display: grid;
  grid-template-rows: min-content 1fr;
  overflow-x: hidden;
}

/* Images Preset */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Forms Preset */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove Animations/Access */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/********************/
/*  Utility Classes */
/********************/
/* utilities have smaller bits of code */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
  /* outline: 1px solid red; */
}

.container {
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 80rem;
}

/* Screen Reader */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.skip-to-content {
  position: absolute;
  z-index: 9999;
  background: hsl(var(--clr-white));
  color: hsl(var(--clr-dark));
  padding: 0.5em 1em;
  margin-inline: auto;
  transform: translateY(-100%);
  transition: transform 250ms ease-in;
}

.skip-to-content:focus {
  transform: translateY(0);
}

/* Colors */
.bg-black {
  background-color: var(--black);
}

.bg-light {
  background-color: var(--light);
}

.bg-gray {
  background-color: var(--gray);
}

.bg-primary {
  background-color: var(--primary);
}

.bg-dark {
  background-color: var(--dark);
}

.bg-accent {
  background-color: var(--accent);
}

.bg-secondary {
  background-color: var(--secondary);
}

.text-dark {
  color: var(--dark);
}

.text-light {
  color: var(--primary);
}

.text-white {
  color: var(--light);
}

.text-secondary {
  color: var(--secondary);
}

.text-black {
  color: var(--black);
}

/* typography */
.ff-title {
  font-family: var(--ff-title);
}

.ff-header {
  font-family: var(--ff-header);
}

.ff-body {
  font-family: var(--ff-main);
}

.letter-spacing-1 {
  letter-spacing: 4.75px;
}

.letter-spacing-2 {
  letter-spacing: 2.7px;
}

.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: var(--fs-900);
}

.fs-800 {
  font-size: var(--fs-800);
}

.fs-700 {
  font-size: var(--fs-700);
}

.fs-600 {
  font-size: var(--fs-600);
}

.fs-500 {
  font-size: var(--fs-500);
}

.fs-400 {
  font-size: var(--fs-400);
}

.fs-300 {
  font-size: var(--fs-300);
}

.fs-200 {
  font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

.numbered-title {
  font-family: var(--ff-header);
  font-size: var(--fs-500);
  text-transform: uppercase;
  letter-spacing: 4.72px;
}

.numbered-title span {
  margin-right: 0.5em;
  font-weight: 700;
  color: var(--secondary);
}

/********************/
/* ***Components*** */
/********************/
/* Components have larger pieces and more chunks to them */

/* text */
.gradient-text {
  background-image: linear-gradient(
    45deg,
    var(--primary),
    var(--secondary),
    var(--accent)
  );
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  background-size: 300%;
  background-position: -100%;
  animation: animatedText 3s infinite alternate-reverse;
}

.gradient-text:hover,
.gradient-text:focus {
  background-image: linear-gradient(
    -45deg,
    var(--accent),
    var(--primary),
    var(--secondary)
  );
}

.gradient-text.active {
  background-image: linear-gradient(
    75deg,
    var(--primary),
    var(--dark),
    var(--secondary),
    var(--dark),
    var(--accent)
  );
  text-shadow: 0 0 5px var(--primary);
  animation: animatedText 4s infinite alternate-reverse;
}

@keyframes animatedText {
  from {
    background-position: 0%;
  }

  to {
    background-position: 100%;
  }
}

/* large button */
.large-button {
  position: relative;
  display: grid;
  /* z-index: 1; */
  place-items: center;
  background: var(--primary);
  padding: 0 2em;
  border-radius: 50%;
  /* modern CSS, aspect radio. It's width / height. 
    If a square, one number, otherwise divide.
    Use instead of "height: 100%; width: 100%; */
  aspect-ratio: 1;
  text-decoration: none;
}

.large-button::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  background: linear-gradient(
    -50deg,
    var(--primary),
    var(--light),
    var(--secondary),
    var(--dark),
    var(--accent),
    var(--dark),
    var(--secondary),
    var(--light),
    var(--primary)
  );
  background-size: 400%;
  border-radius: 50%;
  z-index: -1;
  animation: animate 40s linear infinite;
}

@keyframes animate {
  0% {
    background-position: 0 0;
  }

  50% {
    background-position: 400% 0;
  }

  100% {
    background-position: 0 0;
  }
}

.large-button:hover,
.large-button:focus {
  background-color: var(--black);
  color: var(--primary);
  text-shadow: 0 0 15px var(--secondary);
}

.large-button:hover::before,
.large-button:focus::before {
  filter: blur(1.5rem);
}




.underline-indicators > * {
  cursor: pointer;
  padding: var(--underline-gap, 1rem) 0;
  border: 0;
  border-bottom: 0.2rem solid var(--accent);
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
  border-color: var(--secondary);
}

.underline-indicators > .active,
.underline-indicators > [aria-selected='true'] {
  border-color: var(--primary);
}

.tab-list {
  --gap: 2rem;
}

.dot-indicators > * {
  cursor: pointer;
  border: 0;
  border-radius: 50%;
  padding: 0.5em;
  background-color: var(--accent);
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
  background-color: var(--secondary);
}

.dot-indicators > [aria-selected='true'] {
  background-color: var(--primary);
}

/* numbers indicator */

.numbers-indicators {
  display: flex;
  flex-direction: column;
  padding: 2rem;
  margin: 2rem;
}

.numbers-indicators > * {
  cursor: pointer;
  position: relative;
  place-items: center;
  padding: 0 2rem;
  border-radius: 50%;
  aspect-ratio: 1;
  background-color: var(--dark);
  color: var(--light);
  border: 2.5px solid var(--accent);
}

.numbers-indicators > *:hover,
.numbers-indicators > *:focus {
  border-color: var(--secondary);
}

.numbers-indicators > [aria-selected='true'] {
  background-color: var(--dark);
  color: var(--secondary);
  border-color: var(--primary);
  font-weight: bold;
}
